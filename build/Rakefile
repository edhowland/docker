# Rakefile for pdftk and pdfocr docker images
DOCKER_ROOT = "#{File.dirname(__FILE__)}/.."
CONFIG_ROOT = "#{DOCKER_ROOT}/config"

require 'time'
require 'date'
require 'json'
import '../lib/tasks/log.rake'
require DOCKER_ROOT + '/lib/image'

# we get ISO 8601 date from JSON from Docker
# need to convert to Unix Time to compare to File.mtime of semaphore
def time_from_date datetime
  Time.parse(datetime.to_s)
end

# check if image is stale wrt to Dockerfile
def image_stale? image, dockerfile
end

task default: ['./pdftk/.done', './pdfocr/.done']

# here we put experimental stuff w/docker, jsom etc.

desc 'build pdftk'
file './dont_build_pdftk' do
  puts 'building pdftk'
  log 'Building pdftk'
  pdftk_image = ImageFactory.load(CONFIG_ROOT, 'pdftk')
  log 'remove stale pdftk image'
  begin
    sh pdftk_image.rmi
  puts 'removed pdftk image first'
    log 'removed pdftk image'
  rescue => err
    log 'image did not exist'
    puts 'did not remove non-existant pdftk image'
  end
  cd 'pdftk' do
    sh pdftk_image.build
  end
  log 'Built: ' + pdftk_image.name
end

desc 'write out negative semaphore'
task :build_pdftk_if do
  pdftk_image = ImageFactory.load(CONFIG_ROOT, 'pdftk')
  json = `#{pdftk_image.docker_inspect}`
  image = JSON.parse json

  unless image.length == 0
  date = DateTime.iso8601(image[0]['Created'])
  image_created = time_from_date date
  mtime_dockerfile = File.mtime('./pdftk/Dockerfile')
puts "time of file : #{mtime_dockerfile}"
  puts "Time of image created : #{image_created}"
puts "#{(mtime_dockerfile > image_created ? 'dockerfile  > image' : 'image > dockerfile')}"
  if image_created < File.mtime('./pdftk/Dockerfile')
    rm_f './dont_build_pdftk'
  else
    touch './dont_build_pdftk'
  end
 else
    rm_f './dont_build_pdftk'
  end
end

task :pdftk => [:build_pdftk_if, './dont_build_pdftk']

##### End of experiment




desc 'Build pdftk'
file './pdftk/.done' => './pdftk/Dockerfile' do
  log 'Building pdftk'
  pdftk_image = ImageFactory.load(CONFIG_ROOT, 'pdftk')
  cd 'pdftk' do
    sh pdftk_image.build
    touch '.done'
  end
  log 'Built: ' + pdftk_image.name
end

desc 'Build pdfocr'
file './pdfocr/.done' => './pdfocr/Dockerfile' do
  log 'Building pdfocr'
  pdfocr_image = ImageFactory.load(CONFIG_ROOT, 'pdfocr')
  cd 'pdfocr' do
    sh pdfocr_image.build
    touch '.done'
  end
  log 'Built : ' + pdfocr_image.name
end

desc 'cleans all tasks so they can be run anew'
task :clean do
  log 'Cleaning up semaphores : .done'
  log 'remove pdftk image'
  pdftk_image = ImageFactory.load(CONFIG_ROOT, 'pdftk')
  begin
    sh pdftk_image.rmi
  rescue => err
    log 'did not remove non-existant pdftk image'
    puts 'pdftk image did not exist. doing nothing'
  end
  rm_f './pdfocr/.done'
end
